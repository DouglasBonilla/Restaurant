@page "/user/create"
@using HotPlateRestaurant.EN;
@using HotPlateBurger.Data;
@inject HttpClient Http;
@inject NavigationManager NavManager

<h3>Registrar</h3>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Nombre</label>
                <input type="text" class="form-control" id="idName" @bind-value="usuario.Name" />
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Apellido</label>
                <input type="text" class="form-control" id="idLastBame" @bind-value="usuario.LastName" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Telefono</label>
                <input type="number" class="form-control" id="idPhone" @bind-value="usuario.Phone" />
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Email</label>
                <input type="email" class="form-control" id="idEmail" @bind-value="usuario.Email" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Password</label>
                <input type="password" class="form-control" id="idPassword" @bind-value="usuario.Password" />
            </div>
        </div>
    </div>
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Comfirmar Password</label>
                <input type="password" class="form-control" id="idComfirmarPassword" @bind-value="usuario.ConfirmPassword_aux" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <label class="form-label">Estatus</label>
                <InputSelect id="roles" class="form-select" @bind-Value="usuario.Status">
                    @foreach (var item1 in estados)
                    {
                        <option value="@item1.Id">@item1.Nombre</option>
                    }
                </InputSelect>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6">
        <div class="row mb-3">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="CreateUsuario">Guardar</button>
                <button class="btn btn-secondary" @onclick="Index">Regresar</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <span style="color:red; font-weight:bold">@error</span>
    </div>
</div>

@code {
    userTable? usuario = new userTable();
    List<Estado> estados = new List<Estado>();
    string error = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadRoles();
    }

    private async Task LoadRoles()
    {
        try
        {
            Estado estado = new Estado { Id = 0, Nombre = "      SELECCIONAR     " };
            Estado estado1 = new Estado { Id = 1, Nombre = "ACTIVO" };
            Estado estado2 = new Estado { Id = 2, Nombre = "INACTIVO" };

            estados.Add(estado);
            estados.Add(estado1);
            estados.Add(estado2);
        }
        catch (Exception ex)
        {
            error = "Error al cargar los roles: " + ex.Message;
        }
    }

    public async Task CreateUsuario()
    {
        try
        {
            if (usuario.Password != usuario.ConfirmPassword_aux)
            {
                error = "Password deben ser iguales";
            }
            else
            {
                var resultado = await Http.PostAsJsonAsync<userTable>("userTable", usuario);
                if (Convert.ToInt32(resultado.StatusCode) == 200)
                {
                    Index();
                }
                else
                {
                    error = "Error al ingresar el Usuario";
                }
            }
        }
        catch (Exception ex)
        {

            throw new Exception(ex.Message.ToString());
        }
    }

    void Index()
    {
        NavManager.NavigateTo("/user/index");
    }
}