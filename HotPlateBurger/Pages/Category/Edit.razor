@page "/category/edit/{pId:int}"
@inject HttpClient http
@inject NavigationManager NavManager;

<PageTitle>Editar Categoria</PageTitle>

<input type="hidden" id="idCategory" @bind-value="category.Id" />
<div class="row">
    <div class="col-sm-12">
        <label class="form-label">Nombre</label>
        <input type="text" class="form-control" id="idNombre" @bind-value="category.Name" />
    </div>
</div>

<div class="row">
    <div class="col-sm-12 m-3">
        <button class="btn btn-primary" @onclick="ModificarCategoria">Guardar</button>
        <button class="btn btn-secondary" @onclick="Index">Regresar</button>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <span style="color: red; font-weight: bold">@error</span>
    </div>
</div>


@code {
    categoryTable category = new categoryTable();
    String error = "";

    [Parameter]
    public int pId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (pId != 0)
        {
            category = await http.GetFromJsonAsync<categoryTable>("categoryTable/" + pId);
        }
        else
        {
            error = "Categoria seleccionada no válida";
        }
    }
    public async Task ModificarCategoria()
    {
        try
        {
            var resultado = await http.PutAsJsonAsync("categoryTable/" + category.Id, category);

            if (resultado.IsSuccessStatusCode)
            {
                NavManager.NavigateTo("/category/index");
            }
            else
            {
                error = $"Error al modificar la categoría. Código de estado: {resultado.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            error = $"Ocurrió un error: {ex.Message}";
        }
    }

    void Index()
    {
        NavManager.NavigateTo("/category/index");
    }
}
