@page "/"
@inject HttpClient http
@inject NavigationManager NavManager

<PageTitle>Menu</PageTitle>
<head>
    <style>
        body {
            background-color: #fdf7e7; /* Fondo similar al que tienes */
        }

        .card-container {
            display: flex;
            flex-wrap: wrap;
            gap: 16px;
            justify-content: space-around;
        }

        .card {
            width: 250px;
            border: 1px solid #ddd;
            border-radius: 16px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            background-color: white;
            position: relative;
            padding: 16px;
        }

        .card-img-top {
            width: 100%;
            height: 180px;
            object-fit: cover;
            border-radius: 16px 16px 0 0;
            border-top: 4px solid #f9a825; /* Borde superior amarillo */
        }

        .card-body {
            padding: 16px;
            text-align: center;
        }

        .card-title {
            font-size: 1.25rem;
            margin-bottom: 8px;
            font-weight: bold;
        }

        .card-text {
            font-size: 1rem;
            color: #4B4B4B;
            margin-bottom: 16px;
        }

        .price {
            font-size: 1.5rem;
            color: #000;
            font-weight: bold;
        }

        .cart-icon {
            position: absolute;
            bottom: 16px;
            right: 16px;
            font-size: 24px;
            background-color: #333;
            color: white;
            border-radius: 50%;
            padding: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .cart-icon:hover {
            background-color: #f9a825; 
        }

    </style>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
</head>

@if (foods == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card-container">
        @foreach (var food in foods)
        {
            <div class="card">
                <img src="@food.Picture" alt="Image of @food.Title" class="card-img-top" />
                <div class="card-body">
                    <h5 class="card-title">@food.Title</h5>
                    <p class="price">$@food.Price</p>
                </div>
                <i class="fas fa-shopping-cart cart-icon" @onclick="() => AddToCart(food)"></i>
            </div>
        }
    </div>
}

@code {
    private foodTable[]? foods;
    private List<foodTable> cart = new List<foodTable>();

    protected override async Task OnInitializedAsync()
    {
        await LoadFoods();
    }

    private async Task LoadFoods()
    {
        try
        {
            foods = await http.GetFromJsonAsync<foodTable[]>("foodTable");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading food: {ex.Message}");
        }
    }

    private void AddToCart(foodTable food)
    {
        cart.Add(food);
        Console.WriteLine($"{food.Title} agregado al carrito.");
        // Puedes agregar lógica adicional para manejar el carrito, como actualizar una vista, guardar en almacenamiento, etc.
    }

    void newFood()
    {
        NavManager.NavigateTo("/food/create");
    }
}
